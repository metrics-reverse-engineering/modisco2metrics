module modisco2metrics;
create OUT : METRICS from IN : Java;

rule C2C { --class to class
	from c : Java!ClassDeclaration
	to out : METRICS!Class (
		name <- c.name,
		LOC <- c.bodyDeclarations->select(b | b.oclIsTypeOf(Java!FieldDeclaration))->size() +
			thisModule.countStatements(c, Java!ConstructorDeclaration) +
			thisModule.countStatements(c, Java!MethodDeclaration)
	)
}

helper def: countStatements(c: Java!ClassDeclaration, type: OclType) : Integer = 
	c.bodyDeclarations
		->select(c | c.oclIsTypeOf(type))
		->reject(d | d.body.oclIsUndefined())
		->collect(f | f.body.statements->size())
		->append(0)->sum();